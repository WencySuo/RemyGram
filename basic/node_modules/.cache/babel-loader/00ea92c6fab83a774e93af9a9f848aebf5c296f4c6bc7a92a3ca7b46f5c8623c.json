{"ast":null,"code":"// // Map.js\n// import React, { useEffect, useState } from 'react';\n// import ReactDOM from 'react-dom';\n// import mapboxgl from 'mapbox-gl';\n// import 'mapbox-gl/dist/mapbox-gl.css';\n// import '../styles/Map.css';\n// import SignInPopup from './SignInPopup';\n// const Map = () => {\n//   const [map, setMap] = useState(null);\n//   const [posts, setPosts] = useState([]);\n//   const [showSignInPopup, setShowSignInPopup] = useState(false);\n//   const handleSignInClick = () => {\n//     setShowSignInPopup(true);\n//   };\n//   const closeSignInPopup = () => {\n//     setShowSignInPopup(false);\n//   };\n//   useEffect(() => {\n//     const initializeMap = () => {\n//       mapboxgl.accessToken = 'pk.eyJ1Ijoid3d3c3NzIiwiYSI6ImNscGl0YjQybDAybWcybG91Ynd6bTAxeWMifQ.b4pItpBiNsKBSQ2bmV-Wuw';\n//       const bounds = [\n//         [-71.119340, 42.373465],\n//         [-71.114128, 42.380368]\n//       ];\n//       const initializedMap = new mapboxgl.Map({\n//         container: 'map',\n//         style: 'mapbox://styles/mapbox/streets-v12',\n//         center: [-71.11671, 42.37443],\n//         zoom: 8,\n//         maxBounds: bounds,\n//       });\n//       setMap(initializedMap);\n//     };\n//     initializeMap();\n//     return () => map?.remove();\n//   }, []);\n//   useEffect(() => {\n//     if (map) {\n//       map.on('click', (e) => {\n//         const coordinates = [e.lngLat.lng, e.lngLat.lat];\n//         handleSignInClick();\n//         // const newPost = {\n//         //   message: 'Your default message here',\n//         //   coordinates: coordinates,\n//         // };\n//         // setPosts([...posts, newPost]);\n//         const testpop = new mapboxgl.Popup({ closeOnClick: false})\n//           .setLngLat([-71.11671, 42.37443])\n//           .setHTML('<h1>Welcome to RemyGram!</h1>')\n//           .addTo(map);\n//         const signInPopupComponent = (\n//           <SignInPopup\n//             onClose={closeSignInPopup}\n//             onSignIn={(userData) => {\n//               console.log('User signed in:', userData);\n//             }}\n//           />\n//         );\n//         const signInPopupContainer = document.createElement('div');\n//         ReactDOM.render(signInPopupComponent, signInPopupContainer);\n//         new mapboxgl.Popup()\n//           .setLngLat(coordinates)\n//           .setDOMContent(signInPopupContainer)\n//           .addTo(map);\n//       });\n//       map.on('mouseenter', () => {\n//         map.getCanvas().style.cursor = 'pointer';\n//       });\n//       map.on('mouseleave', () => {\n//         map.getCanvas().style.cursor = '';\n//       });\n//     }\n//   }, [map, posts]);\n//   return (\n//     <div>\n//       <div id=\"map\" className=\"flex-grow\"></div>\n//       <pre id=\"coordinates\" className=\"coordinates\"></pre>\n//     </div>\n//   );\n// };\n// export default Map;\nimport React,{useEffect}from'react';import mapboxgl from'mapbox-gl';import'mapbox-gl/dist/mapbox-gl.css';import{jsx as _jsx}from\"react/jsx-runtime\";const Map=()=>{useEffect(()=>{mapboxgl.accessToken='pk.eyJ1Ijoid3d3c3NzIiwiYSI6ImNscGl0YjQybDAybWcybG91Ynd6bTAxeWMifQ.b4pItpBiNsKBSQ2bmV-Wuw';const bounds=[[-71.119340,42.373465],[-71.114128,42.380368]];const getRandomCoordinates=()=>{const minLng=bounds[0][0];const maxLng=bounds[1][0];const minLat=bounds[0][1];const maxLat=bounds[1][1];const randomLng=minLng+Math.random()*(maxLng-minLng);const randomLat=minLat+Math.random()*(maxLat-minLat);return[randomLng,randomLat];};const map=new mapboxgl.Map({container:'map',style:'mapbox://styles/mapbox/streets-v12',center:[-77.04,38.907],zoom:11.15,maxBounds:bounds});map.on('load',()=>{// Generate three random points within the bounds as dummy popups\nconst dummyPopups=Array.from({length:3},(_,index)=>{const coordinates=getRandomCoordinates();return{type:'Feature',properties:{description:\"<strong>Dummy Popup \".concat(index+1,\"</strong><p>This is a dummy popup description.</p>\"),icon:'theatre'// Choose an appropriate icon\n},geometry:{type:'Point',coordinates:coordinates}};});map.addSource('dummyPopups',{type:'geojson',data:{type:'FeatureCollection',features:dummyPopups}});map.addLayer({id:'dummyPopups',type:'symbol',source:'dummyPopups',layout:{'icon-image':['get','icon'],'icon-allow-overlap':true}});// When a click event occurs on a feature in the dummyPopups layer, open a popup.\nmap.on('click','dummyPopups',e=>{const coordinates=e.features[0].geometry.coordinates.slice();const description=e.features[0].properties.description;new mapboxgl.Popup().setLngLat(coordinates).setHTML(description).addTo(map);});// Change the cursor to a pointer when the mouse is over the dummyPopups layer.\nmap.on('mouseenter','dummyPopups',()=>{map.getCanvas().style.cursor='pointer';});// Change it back to a pointer when it leaves.\nmap.on('mouseleave','dummyPopups',()=>{map.getCanvas().style.cursor='';});});// Cleanup the map on component unmount\nreturn()=>map.remove();},[]);// Empty dependency array ensures useEffect runs only once\nreturn/*#__PURE__*/_jsx(\"div\",{id:\"map\",style:{position:'absolute',top:0,bottom:0,width:'100%'}});};export default Map;","map":{"version":3,"names":["React","useEffect","mapboxgl","jsx","_jsx","Map","accessToken","bounds","getRandomCoordinates","minLng","maxLng","minLat","maxLat","randomLng","Math","random","randomLat","map","container","style","center","zoom","maxBounds","on","dummyPopups","Array","from","length","_","index","coordinates","type","properties","description","concat","icon","geometry","addSource","data","features","addLayer","id","source","layout","e","slice","Popup","setLngLat","setHTML","addTo","getCanvas","cursor","remove","position","top","bottom","width"],"sources":["/Users/steven/Documents/GitHub/RemyGram/basic/src/components/Map.js"],"sourcesContent":["// // Map.js\n// import React, { useEffect, useState } from 'react';\n// import ReactDOM from 'react-dom';\n// import mapboxgl from 'mapbox-gl';\n// import 'mapbox-gl/dist/mapbox-gl.css';\n// import '../styles/Map.css';\n// import SignInPopup from './SignInPopup';\n\n// const Map = () => {\n//   const [map, setMap] = useState(null);\n//   const [posts, setPosts] = useState([]);\n//   const [showSignInPopup, setShowSignInPopup] = useState(false);\n\n//   const handleSignInClick = () => {\n//     setShowSignInPopup(true);\n//   };\n\n//   const closeSignInPopup = () => {\n//     setShowSignInPopup(false);\n//   };\n\n//   useEffect(() => {\n//     const initializeMap = () => {\n//       mapboxgl.accessToken = 'pk.eyJ1Ijoid3d3c3NzIiwiYSI6ImNscGl0YjQybDAybWcybG91Ynd6bTAxeWMifQ.b4pItpBiNsKBSQ2bmV-Wuw';\n\n//       const bounds = [\n//         [-71.119340, 42.373465],\n//         [-71.114128, 42.380368]\n//       ];\n\n//       const initializedMap = new mapboxgl.Map({\n//         container: 'map',\n//         style: 'mapbox://styles/mapbox/streets-v12',\n//         center: [-71.11671, 42.37443],\n//         zoom: 8,\n//         maxBounds: bounds,\n//       });\n\n//       setMap(initializedMap);\n//     };\n\n//     initializeMap();\n\n//     return () => map?.remove();\n//   }, []);\n\n//   useEffect(() => {\n//     if (map) {\n//       map.on('click', (e) => {\n//         const coordinates = [e.lngLat.lng, e.lngLat.lat];\n\n//         handleSignInClick();\n\n//         // const newPost = {\n//         //   message: 'Your default message here',\n//         //   coordinates: coordinates,\n//         // };\n\n//         // setPosts([...posts, newPost]);\n\n//         const testpop = new mapboxgl.Popup({ closeOnClick: false})\n//           .setLngLat([-71.11671, 42.37443])\n//           .setHTML('<h1>Welcome to RemyGram!</h1>')\n//           .addTo(map);\n\n//         const signInPopupComponent = (\n//           <SignInPopup\n//             onClose={closeSignInPopup}\n//             onSignIn={(userData) => {\n//               console.log('User signed in:', userData);\n//             }}\n//           />\n//         );\n\n//         const signInPopupContainer = document.createElement('div');\n//         ReactDOM.render(signInPopupComponent, signInPopupContainer);\n\n//         new mapboxgl.Popup()\n//           .setLngLat(coordinates)\n//           .setDOMContent(signInPopupContainer)\n//           .addTo(map);\n//       });\n\n//       map.on('mouseenter', () => {\n//         map.getCanvas().style.cursor = 'pointer';\n//       });\n\n//       map.on('mouseleave', () => {\n//         map.getCanvas().style.cursor = '';\n//       });\n\n//     }\n//   }, [map, posts]);\n\n//   return (\n//     <div>\n//       <div id=\"map\" className=\"flex-grow\"></div>\n//       <pre id=\"coordinates\" className=\"coordinates\"></pre>\n//     </div>\n//   );\n// };\n\n// export default Map;\n\nimport React, { useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nconst Map = () => {\n  useEffect(() => {\n    mapboxgl.accessToken = 'pk.eyJ1Ijoid3d3c3NzIiwiYSI6ImNscGl0YjQybDAybWcybG91Ynd6bTAxeWMifQ.b4pItpBiNsKBSQ2bmV-Wuw';\n\n    const bounds = [\n      [-71.119340, 42.373465],\n      [-71.114128, 42.380368]\n    ];\n\n    const getRandomCoordinates = () => {\n      const minLng = bounds[0][0];\n      const maxLng = bounds[1][0];\n      const minLat = bounds[0][1];\n      const maxLat = bounds[1][1];\n\n      const randomLng = minLng + Math.random() * (maxLng - minLng);\n      const randomLat = minLat + Math.random() * (maxLat - minLat);\n\n      return [randomLng, randomLat];\n    };\n\n    const map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [-77.04, 38.907],\n      zoom: 11.15,\n      maxBounds: bounds,\n    });\n\n    map.on('load', () => {\n      // Generate three random points within the bounds as dummy popups\n      const dummyPopups = Array.from({ length: 3 }, (_, index) => {\n        const coordinates = getRandomCoordinates();\n        return {\n          type: 'Feature',\n          properties: {\n            description: `<strong>Dummy Popup ${index + 1}</strong><p>This is a dummy popup description.</p>`,\n            icon: 'theatre', // Choose an appropriate icon\n          },\n          geometry: {\n            type: 'Point',\n            coordinates: coordinates,\n          },\n        };\n      });\n\n      map.addSource('dummyPopups', {\n        type: 'geojson',\n        data: {\n          type: 'FeatureCollection',\n          features: dummyPopups,\n        },\n      });\n\n      map.addLayer({\n        id: 'dummyPopups',\n        type: 'symbol',\n        source: 'dummyPopups',\n        layout: {\n          'icon-image': ['get', 'icon'],\n          'icon-allow-overlap': true,\n        },\n      });\n\n      // When a click event occurs on a feature in the dummyPopups layer, open a popup.\n      map.on('click', 'dummyPopups', (e) => {\n        const coordinates = e.features[0].geometry.coordinates.slice();\n        const description = e.features[0].properties.description;\n\n        new mapboxgl.Popup()\n          .setLngLat(coordinates)\n          .setHTML(description)\n          .addTo(map);\n      });\n\n      // Change the cursor to a pointer when the mouse is over the dummyPopups layer.\n      map.on('mouseenter', 'dummyPopups', () => {\n        map.getCanvas().style.cursor = 'pointer';\n      });\n\n      // Change it back to a pointer when it leaves.\n      map.on('mouseleave', 'dummyPopups', () => {\n        map.getCanvas().style.cursor = '';\n      });\n    });\n\n    // Cleanup the map on component unmount\n    return () => map.remove();\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  return <div id=\"map\" style={{ position: 'absolute', top: 0, bottom: 0, width: '100%' }} />;\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}