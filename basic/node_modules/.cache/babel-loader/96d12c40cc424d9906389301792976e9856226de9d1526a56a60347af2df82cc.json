{"ast":null,"code":"// Map.js\nimport React,{useEffect,useState}from'react';import ReactDOM from'react-dom';import mapboxgl from'mapbox-gl';import'mapbox-gl/dist/mapbox-gl.css';import'../styles/Map.css';import PostForm from'./PostForm';// import marker from '../assets/remylogo_tpt.png';\nimport PopupComponent from'./Popup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Map=()=>{const[map,setMap]=useState(null);// State to store the map instance\nconst[posts,setPosts]=useState([]);// State to store submitted posts\nuseEffect(()=>{// Initialize map\nconst initializeMap=()=>{mapboxgl.accessToken='pk.eyJ1Ijoid3d3c3NzIiwiYSI6ImNscGl0YjQybDAybWcybG91Ynd6bTAxeWMifQ.b4pItpBiNsKBSQ2bmV-Wuw';const bounds=[[-71.119340,42.373465],// Southwest coordinates\n[-71.114128,42.380368]// Northeast coordinates\n];const initializedMap=new mapboxgl.Map({container:'map',style:'mapbox://styles/mapbox/streets-v12',center:[-71.11671,42.37443],zoom:8,maxBounds:bounds});setMap(initializedMap);// Store the map instance in state\n};initializeMap();// Cleanup the map on component unmount\nreturn()=>map===null||map===void 0?void 0:map.remove();},[]);// Empty dependency array ensures useEffect runs only once\nuseEffect(()=>{if(map){// Add a click event listener to the map \nmap.on('click',e=>{// use the clicked coordinates to create a new post \nconst coordinates=[e.lngLat.lng,e.lngLat.lat];const newPost={message:'Your default message here',coordinates:coordinates};// update the state with the new post\nsetPosts([...posts,newPost]);// popupcomponet for more complex content\nconst popupComponent=/*#__PURE__*/_jsx(PopupComponent,{message:newPost.message,onClose:()=>{// Handle close action\nalert('Popup closed');},onConfirm:()=>{// Handle confirm action\nalert('Privacy accepted');}});// Create a DOM element from the React component\nconst popupContainer=document.createElement('div');ReactDOM.render(popupComponent,popupContainer);// Create a popup with the post message and open it at the clicked coordinates\nnew mapboxgl.Popup().setLngLat(coordinates).setDOMContent(popupContainer).addTo(map);});// Change the cursor to a pointer when hovering over the map\nmap.on('mouseenter',()=>{map.getCanvas().style.cursor='pointer';});// Change it back to the default cursor when leaving the map \nmap.on('mouseleave',()=>{map.getCanvas().style.cursor='';});}},[map,posts]);const handlePostSubmit=async message=>{if(map){// Get the current map center coordinates\nconst coordinates=map.getCenter().toArray();// Simulate a post request to jsonplaceholder\ntry{const response=await fetch('https://jsonplaceholder.typicode.com/posts',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({title:'Post Title',body:message,userID:1// this can be any user ID\n})});if(!response.ok){throw new Error('Failed to submit post');}const newPost=await response.json();// update the state with the new post \nsetPosts([...posts,{message,coordinates,id:newPost.id}]);}catch(error){console.error(error);}}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{id:\"map\",className:\"flex-grow\"}),/*#__PURE__*/_jsx(\"pre\",{id:\"coordinates\",className:\"coordinates\"})]});};export default Map;","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","mapboxgl","PostForm","PopupComponent","jsx","_jsx","jsxs","_jsxs","Map","map","setMap","posts","setPosts","initializeMap","accessToken","bounds","initializedMap","container","style","center","zoom","maxBounds","remove","on","e","coordinates","lngLat","lng","lat","newPost","message","popupComponent","onClose","alert","onConfirm","popupContainer","document","createElement","render","Popup","setLngLat","setDOMContent","addTo","getCanvas","cursor","handlePostSubmit","getCenter","toArray","response","fetch","method","headers","body","JSON","stringify","title","userID","ok","Error","json","id","error","console","children","className"],"sources":["/Users/steven/Documents/GitHub/RemyGram/basic/src/components/Map.js"],"sourcesContent":["// Map.js\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport '../styles/Map.css';\nimport PostForm from './PostForm';\n// import marker from '../assets/remylogo_tpt.png';\nimport PopupComponent from './Popup';\n\nconst Map = () => {\n  const [map, setMap] = useState(null); // State to store the map instance\n  const [posts, setPosts] = useState([]); // State to store submitted posts\n\n  useEffect(() => {\n    // Initialize map\n    const initializeMap = () => {\n      mapboxgl.accessToken = 'pk.eyJ1Ijoid3d3c3NzIiwiYSI6ImNscGl0YjQybDAybWcybG91Ynd6bTAxeWMifQ.b4pItpBiNsKBSQ2bmV-Wuw';\n\n      const bounds = [\n        [-71.119340, 42.373465], // Southwest coordinates\n        [-71.114128, 42.380368]  // Northeast coordinates\n      ];\n\n      const initializedMap = new mapboxgl.Map({\n        container: 'map',\n        style: 'mapbox://styles/mapbox/streets-v12',\n        center: [-71.11671, 42.37443],\n        zoom: 8,\n        maxBounds: bounds,\n      });\n\n      setMap(initializedMap); // Store the map instance in state\n    };\n\n    initializeMap();\n\n    // Cleanup the map on component unmount\n    return () => map?.remove();\n  }, []); // Empty dependency array ensures useEffect runs only once\n\n  useEffect(() => {\n    if (map) {\n      // Add a click event listener to the map \n      map.on('click', (e) => {\n        // use the clicked coordinates to create a new post \n        const coordinates = [e.lngLat.lng, e.lngLat.lat];\n        const newPost = {\n          message: 'Your default message here',\n          coordinates: coordinates, \n        };\n\n        // update the state with the new post\n        setPosts([...posts, newPost]);\n\n        // popupcomponet for more complex content\n        const popupComponent = (\n          <PopupComponent\n            message={newPost.message}\n            onClose={() => {\n              // Handle close action\n              alert('Popup closed');\n            }}\n            onConfirm={() => {\n              // Handle confirm action\n              alert('Privacy accepted');\n            }}\n          />\n        );\n\n        // Create a DOM element from the React component\n        const popupContainer = document.createElement('div');\n        ReactDOM.render(popupComponent, popupContainer);\n\n        // Create a popup with the post message and open it at the clicked coordinates\n        new mapboxgl.Popup()\n          .setLngLat(coordinates)\n          .setDOMContent(popupContainer)\n          .addTo(map);\n      });\n\n      // Change the cursor to a pointer when hovering over the map\n      map.on('mouseenter', ()=> {\n        map.getCanvas().style.cursor = 'pointer';\n      });\n\n      // Change it back to the default cursor when leaving the map \n      map.on('mouseleave', () => {\n        map.getCanvas().style.cursor = '';\n      });\n\n    }\n  }, [map, posts]);\n\n  const handlePostSubmit = async (message) => {\n    if (map) {\n      // Get the current map center coordinates\n      const coordinates = map.getCenter().toArray();\n\n      // Simulate a post request to jsonplaceholder\n      try {\n        const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            title: 'Post Title', \n            body: message, \n            userID: 1, // this can be any user ID\n          }),\n        });\n\n        if (!response.ok){\n          throw new Error('Failed to submit post');\n        }\n        \n        const newPost = await response.json();\n\n        // update the state with the new post \n        setPosts([...posts, { message, coordinates, id: newPost.id }]);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"map\" className=\"flex-grow\"></div>\n      {/* <PostForm onPostSubmit={handlePostSubmit} /> */}\n      <pre id=\"coordinates\" className=\"coordinates\"></pre>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}